version: '3.8'

services:
  # WordPress service
  wordpress:
    image: wordpress:latest
    container_name: musaixpro_wordpress
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DEBUG: ${WP_DEBUG:-0}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', ${WP_DEBUG:-false});
        define('WP_DEBUG_LOG', ${WP_DEBUG_LOG:-false});
        define('WP_DEBUG_DISPLAY', ${WP_DEBUG_DISPLAY:-false});
        define('SCRIPT_DEBUG', ${SCRIPT_DEBUG:-false});
    volumes:
      - ./wordpress:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    depends_on:
      - db
    networks:
      - wordpress-network

  # MySQL/MariaDB service
  db:
    image: mariadb:latest
    container_name: musaixpro_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - wordpress-network

  # phpMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: musaixpro_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    depends_on:
      - db
    networks:
      - wordpress-network

  # WP-CLI for WordPress management
  wpcli:
    image: wordpress:cli
    container_name: musaixpro_wpcli
    volumes:
      - ./wordpress:/var/www/html
    depends_on:
      - wordpress
    networks:
      - wordpress-network
    profiles:
      - cli

volumes:
  db_data:

networks:
  wordpress-network:
    driver: bridge